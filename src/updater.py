import os
import sys

runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

from apps.log import *

from apps.messages import *
from apps.populate_cve import PopulateCVE
from apps.update_cve import UpdateCVE

def load_settings():
    st = settings.Settings()
    return st.load()


def logme(message, code=0):
    makelog(os.path.basename(__file__), message, code)


class PopulaterCVE():

    def __init__(self, settings):
        self.settings = settings

    def run(self):
        populate_cve = PopulateCVE(self.settings)
        populate_cve.run()

class UpdaterCVE():

    def __init__(self, settings):
        self.settings = settings

    def run(self):
        update_cve = UpdateCVE(self.settings)
        update_cve.run()

def main():
    settings = load_settings()

    # for test only
    from apps.cache import Cache
    cache = Cache()
    cache.db.flushall()

    populate = PopulaterCVE(settings)
    populate.run()

    update = UpdaterCVE(settings)
    update.run()

    logme('job complete', CODE_COMPLETE)

if __name__ == '__main__':
    sys.exit(main())
