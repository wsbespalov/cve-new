import os
import sys

runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

from apps.log import makelog
from apps.mongo import Mongo
from apps.cache import Cache

from settings import settings
st = settings.Settings()
cfg = st.load()

cache = Cache()
mongo = Mongo()

defaultvalue = {}
defaultvalue['cwe'] = "Unknown"

def logme(message, code=0):
    makelog(os.path.basename(__file__), message, code)

def make_task_insert_or_modify_for_modified_file(item):
    x = mongo.getCVE(item['id'])
    if x:
        if 'cvss' not in item:
            item['cvss'] = None
        if 'cwe' not in item:
            item['cwe'] = defaultvalue['cwe']
        make_task_updateCVE(item)
    else:
        make_task_insertCVE(item)

def make_task_insert_or_modify_for_recent_file(item):
    x = mongo.getCVE(item['id'])
    if x:
        if 'cvss' not in item:
            item['cvss'] = None
        else:
            item['cvss'] = float(item['cvss'])
        if 'cwe' not in item:
            item['cwe'] = defaultvalue['cwe']
        make_task_updateCVE(item)
    else:
        make_task_insertCVE(item)

def make_task_setColUpdate(collection, date):
    task = {
        'type': cfg['task_setColUpdate'],
        'collection': collection,
        'data': date
    }
    cache.push_task(task)

def make_task_setColInfo(collection, field, data):
    task = {
        'type': cfg['task_setColInfo'],
        'collection': collection,
        'field': field,
        'data': data
    }
    cache.push_task(task)

def make_task_insertCVE(content):
    logme('call make_task_insertCVE...')
    task = {
        'type': cfg['task_insertCVE'],
        'collection': cache.collection_cve,
        'data': content
    }
    cache.push_task(task)

def make_task_updateCVE(content):
    task = {
        'type': cfg['task_updateCVE'],
        'collection': cache.collection_cve,
        'data': content
    }
    cache.push_task(task)