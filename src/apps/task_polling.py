import os
import sys
import ast
import json
import datetime

runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

from settings import settings
st = settings.Settings()
cfg = st.load()

from apps.cache import Cache
from apps.mongo import Mongo

cache = Cache()
mongo = Mongo()

def main():
    run_time = datetime.datetime.now()
    while True:
        if not cache.empty_tasks():
            t = cache.get_last_task()
            last_task = ast.literal_eval(t)
            # last_task = json.loads(t)
            if last_task is not None:
                if last_task['data'] is not None:
                    data = last_task['data']
                    if 'type' in last_task:
                        if last_task['type'] == cfg['task_setColUpdate']:
                            mongo.setColUpdate(
                                cfg['redis_collection_cve'],
                                data)
                        if last_task['type'] == cfg['task_setColInfo']:
                            mongo.setColInfo(
                                last_task['collection'],
                                last_task['field'],
                                data)
                        if last_task['type'] == cfg['task_insertCVE']:
                            mongo.insertCVE(
                                data)
                        if last_task['type'] == cfg['task_updateCVE']:
                            mongo.updateCVE(
                                data)
                cache.delete_last_task()
        else:
            print('Complete polling in %s' % (datetime.datetime.now() - run_time))
            cache.set_complete_flag()
            return 0

if __name__ == '__main__':
    sys.exit(main())