import os
import sys
import ast
import json
import datetime

runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

from settings import settings
st = settings.Settings()
cfg = st.load()

from apps.cache import Cache
from apps.mongo import Mongo

cache = Cache()
mongo = Mongo()
task_collection = None

def main():
    while True:
        if not cache.empty_tasks():
            t = cache.get_last_task()
            last_task = ast.literal_eval(t)
            # last_task = json.loads(t)
            if last_task is not None:
                if 'type' in last_task:
                    if last_task['type'] == cfg['task_setColUpdate']:
                        collection = cfg['redis_collection_cve']
                        last_modified = last_task['data']
                        mongo.setColUpdate(collection, last_modified)
                    if last_task['type'] == cfg['task_setColInfo']:
                        collection = last_task['collection']
                        field = last_task['field']
                        data = last_task['data']
                        mongo.setColInfo(collection, field, data)
                    if last_task['type'] == cfg['task_insertCVE']:
                        data = last_task['data']
                        mongo.insertCVE(data)
                    if last_task['type'] == cfg['task_updateCVE']:
                        data = last_task['data']
                        mongo.updateCVE(data)
                    cache.delete_last_task()
        else:
            print('Complete polling')
            return 0

if __name__ == '__main__':
    sys.exit(main())